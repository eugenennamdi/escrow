{"version":3,"sources":["Screens/ProfileCard.module.css","Components/Header.js","Actions/userActions.js","Constants/userConstants.js","Components/Footer.js","Components/FormContainer.js","Components/Loader.js","Components/Message.js","Screens/LoginScreen.js","Screens/RegisterScreen.js","Screens/HomeScreen.js","Screens/CreateAddressScreen.js","Screens/HistoryScreen.js","App.js","serviceWorker.js","store.js","Reducers/userReducer.js","index.js"],"names":["module","exports","Header","history","userInfo","useSelector","state","userLogin","dispatch","useDispatch","Navbar","bg","variant","expand","collapseOnSelect","Container","to","Brand","Toggle","aria-controls","Collapse","id","Nav","className","NavDropdown","title","name","Item","onClick","a","localStorage","removeItem","type","Link","style","margin","Footer","Row","Col","FormContainer","children","xs","md","Loader","Spinner","animation","role","height","width","display","Message","Alert","LoginScreen","location","React","email","setEmail","password","setPassword","redirect","search","split","loading","error","push","Form","onSubmit","e","preventDefault","config","headers","axios","post","data","payload","response","details","message","login","Group","controlId","Label","Control","placeholder","value","onChange","target","Button","RegisterScreen","setName","confirmPassword","setConfirmPassword","setMesssage","userRegister","setItem","JSON","stringify","detail","register","console","log","required","HomeScreen","backgroundImage","CreateAddrressScreen","phone","setPhone","address","setAddress","country","setCountry","city","setCity","setState","postalCode","setPostalCode","accountNumber","setAccountNumber","getState","Authorization","token","Address","HistoryScreen","useState","useEffect","Table","striped","responsive","username","App","path","component","exact","Boolean","window","hostname","match","reducer","combineReducers","action","userAddress","initialState","getItem","parse","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.a38e62ee.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Background\":\"ProfileCard_Background__2dmmf\",\"ProfileCard\":\"ProfileCard_ProfileCard__V8jQK\",\"ProfileCardBody\":\"ProfileCard_ProfileCardBody__2WvMX\",\"ProfileCardBackgroundImage\":\"ProfileCard_ProfileCardBackgroundImage__3QV1U\",\"ProfileCardImage\":\"ProfileCard_ProfileCardImage__1mS7H\",\"TextMuted\":\"ProfileCard_TextMuted__34lCI\",\"TextBold\":\"ProfileCard_TextBold__38av1\",\"CardFooter\":\"ProfileCard_CardFooter__915GT\",\"FooterP\":\"ProfileCard_FooterP__i-r6v\"};","import { Navbar,Nav,Container,NavDropdown} from \"react-bootstrap\";\nimport {LinkContainer,} from 'react-router-bootstrap'\nimport { FaUser} from 'react-icons/fa'\n// @flow strict\n\nimport  React from 'react';\nimport {useSelector,useDispatch} from 'react-redux'\nimport { logout } from \"../Actions/userActions\";\n\nfunction Header({history}) {\n\n    const userLogin = useSelector(state=> state.userLogin)\n    const {userInfo} = userLogin\n    const dispatch = useDispatch()\n\n    const Logout = ()=>{\n        dispatch(logout())\n        \n       \n\n    }\n    return (\n        <div>\n            <header>\n                <Navbar  bg=\"dark\" variant=\"dark\"expand=\"lg\" collapseOnSelect>\n                    <Container>\n                    <LinkContainer to='/'>\n                    <Navbar.Brand>PRIMODIAL ESCROW SERVICES</Navbar.Brand>\n                    </LinkContainer>\n\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\"/>\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\n                        <Nav className=\"ml-auto\">\n                        {userInfo ? (\n                                    <NavDropdown title={userInfo.name} id=\"username\">\n                                        <LinkContainer to='/profile'>\n                                            <NavDropdown.Item >\n                                            Profile\n                                            </NavDropdown.Item>\n                                        </LinkContainer>\n                                        <NavDropdown.Item onClick={Logout}>Logout</NavDropdown.Item>\n\n                                    </NavDropdown> \n                                ): <LinkContainer to='/login'>\n                                <Nav.Link><i className=\"fas fa-user\"></i></Nav.Link>\n                            </LinkContainer>}\n                            {!userInfo && (\n                                <LinkContainer to='/login'>\n                                <Nav.Link><FaUser style={{margin: \"5\"}}/>Login</Nav.Link>\n                            </LinkContainer>\n                            )}\n                          \n\n                          {!userInfo && (\n                                <LinkContainer to='/register'>\n                                <Nav.Link><FaUser style={{margin: \"5\"}}/>Sign up</Nav.Link>\n                            </LinkContainer>\n                            )}\n                          \n                        </Nav>\n\n                    </Navbar.Collapse>\n\n                    \n                    </Container>\n\n\n                </Navbar>\n            </header>\n            \n        </div>\n    );\n};\n\nexport default Header;","import {\n    USER_LOGIN_REQUEST,\nUSER_LOGIN_SUCCESS,USER_LOGIN_FAIL,\nUSER_LOGOUT,\n\n\nUSER_REGISTER_SUCCESS,\nUSER_REGISTER_REQUEST,\nUSER_REGISTER_FAIL,\n\nUSER_CREATE_ADRESS_SUCCESS,\nUSER_CREATE_ADRESS_REQUEST,\nUSER_CREATE_ADRESS_FAIL,\n\nUSER_DETAILS_REQUEST,\nUSER_DETAILS_SUCCESS,\nUSER_DETAILS_FAIL,\nUSER_DETAILS_RESET,\n\n} from  '../Constants/userConstants'\n\nimport axios from \"axios\"\n\nexport const login = (email, password) => async (dispatch) => {\n    try {\n        dispatch({\n            type: USER_LOGIN_REQUEST\n        })\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json'\n            }\n        }\n\n        const { data } = await axios.post(\n            'http://127.0.0.1:8000/api/user/login/',\n            { 'username': email, 'password': password },\n            config\n        )\n\n        dispatch({\n            type: USER_LOGIN_SUCCESS,\n            payload: data\n        })\n\n        //localStorage.setItem('userInfo', JSON.stringify(data))\n\n    } catch (error) {\n        dispatch({\n            type: USER_LOGIN_FAIL,\n            payload: error.response && error.response.data.details\n                ? error.response.data.details\n                : error.message,\n        })\n    }\n}\n\nexport const logout = () => async (dispatch)=>{\n    localStorage.removeItem('userInfo')\n    dispatch({type: USER_LOGOUT})\n    dispatch({ type: USER_DETAILS_RESET })\n\n}\n\n\nexport const register = (name,email, password) => async (dispatch) => {\n    try {\n        dispatch({\n            type: USER_REGISTER_REQUEST\n        })\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json'\n            }\n        }\n\n        const { data } = await axios.post(\n            'http://127.0.0.1:8000/api/user/register/',\n            { 'name':name, 'email':email, 'password':password},\n            config\n        )\n\n        dispatch({\n            type: USER_REGISTER_SUCCESS,\n            payload: data\n        })\n\n        localStorage.setItem('userInfo', JSON.stringify(data))\n\n    } catch (error) {\n        dispatch({\n            type: USER_REGISTER_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\nexport const getUserDetails = (id) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: USER_DETAILS_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.get(\n            `http://127.0.0.1:8000/api/user/${id}/`\n            ,\n            config\n        )\n\n        dispatch({\n            type: USER_DETAILS_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: USER_DETAILS_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\nexport const Address = (phone,address,country,city,state,postalCode,accountNumber) => async (dispatch,getState) => {\n    try {\n        dispatch({\n            type: USER_CREATE_ADRESS_REQUEST\n        })\n\n        \n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.post(\n            'http://127.0.0.1:8000/api/user/create/address/',\n            { phone, address, country, city, state, postalCode,accountNumber},\n            config\n        )\n\n        dispatch({\n            type: USER_CREATE_ADRESS_SUCCESS,\n            payload: data\n        })\n\n        localStorage.setItem('userInfo', JSON.stringify(data))\n\n    } catch (error) {\n        dispatch({\n            type: USER_CREATE_ADRESS_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}","export const USER_LOGIN_REQUEST = \"USER_LOGIN_REQUEST\"\nexport const USER_LOGIN_SUCCESS = \"USER_LOGIN_SUCCESS\"\nexport const USER_LOGIN_FAIL = \"USER_LOGIN_FAIL\"\nexport const USER_LOGOUT= 'USER_LOGOUT'\n\nexport const USER_REGISTER_REQUEST= 'USER_REGISTER_REQUEST'\nexport const USER_REGISTER_SUCCESS= 'USER_REGISTER_SUCCESS'\nexport const USER_REGISTER_FAIL= 'USER_REGISTER_FAIL'\n\nexport const USER_CREATE_ADRESS_REQUEST= 'USER_CREATE_ADRESS_REQUEST'\nexport const USER_CREATE_ADRESS_SUCCESS= 'USER_CREATE_ADRESS_SUCCESS'\nexport const USER_CREATE_ADRESS_FAIL= 'USER_CREATE_ADRESS_FAIL'\n\nexport const USER_DETAILS_REQUEST= 'USER_DETAILS_REQUEST'\nexport const USER_DETAILS_SUCCESS= 'USER_DETAILS_SUCCESS'\nexport const USER_DETAILS_FAIL= 'USER_DETAILS_FAIL'\nexport const USER_DETAILS_RESET= 'USER_DETAILS_RESET'\n","// @flow strict\n\nimport * as React from 'react';\nimport { Container,Col,Row } from \"react-bootstrap\";\n\n\n\nfunction Footer() {\n    return (\n        <div>\n            <Container>\n                \n                <Row>\n                <appBar/>\n                <Col className=\"text-center py-3\">Copyright &copy; PRIMODIAL ESCROW SERVICES</Col>\n                </Row>\n            </Container>\n            \n        </div>\n    );\n};\n\nexport default Footer;","// @flow strict\n\nimport React from 'react';\nimport { Container,Row,Col } from \"react-bootstrap\";\n\nfunction FormContainer({children}) {\n    return (\n        <Container>\n            <Row className=\"justify-content-md-center\">\n                <Col xs={12} md={6}>{children}</Col>\n            </Row>\n        </Container>\n    );\n};\n\nexport default FormContainer;","// @flow strict\n\nimport * as React from 'react';\nimport {Spinner} from 'react-bootstrap'\n\nfunction Loader() {\n    return (\n        <Spinner\n            animation='border'\n            role=\"status\"\n            style={{\n                height: '100px',\n                width: \"100px\",\n                margin: 'auto',\n                display : 'block',\n            }}\n        >\n            <span className=\"sr-only\">Loading...</span>\n        </Spinner>\n    );\n};\n\nexport default Loader;","// @flow strict\nimport { Alert } from 'react-bootstrap';\n\nimport * as React from 'react';\n\nfunction Message({variant, children}) {\n    return (\n        <Alert variant={variant}>\n            {children}\n        </Alert>\n    );\n};\n\nexport default Message;","// @flow strict\n// @flow strict\n\nimport * as React from 'react';\nimport { Link } from \"react-router-dom\";\nimport { Row,Col,Form,Button } from \"react-bootstrap\";\nimport {useSelector, useDispatch} from 'react-redux'\nimport { login } from '../Actions/userActions';\n\nimport FormContainer from '../Components/FormContainer';\nimport Loader from '../Components/Loader';\nimport Message from '../Components/Message';\n\n\nfunction LoginScreen({history,location}) {\n    const [email, setEmail] = React.useState('')\n    const [password, setPassword] = React.useState('')\n\n    const redirect = location.search ? location.search.split('m')[1] : '/'\n    const userLogin = useSelector(state=> state.userLogin)\n    const {loading,error,userInfo} = userLogin\n\n\n    const dispatch = useDispatch()\n    React.useEffect(()=>{\n        if(userInfo){\n            history.push(redirect)\n        }\n      \n    }, [history,userInfo,redirect])\n    \n    const submitHandler = (e)=>{\n        e.preventDefault()\n        dispatch(login(email,password))\n    \n    }\n  \n    return (\n        <>\n            \n            \n                <FormContainer>\n\n                    \n                <h1>Welcome to Primodial Escrow Services, please proceed to sign-in with your email address and password</h1>\n\n                \n            {error && <Message variant=\"danger\">Incorrect Password or username</Message>}\n            {loading && <Loader/>}\n                \n    \n    \n    \n                <Form onSubmit={submitHandler}>\n                    <Form.Group controlId=\"email\">\n                        <Form.Label>E-mail Address</Form.Label>\n                        <Form.Control\n                        type=\"email\"\n                        placeholder=\"Enter your email here\"\n                        value={email} \n                        onChange={(e)=>setEmail(e.target.value)}\n                        ></Form.Control>\n                    </Form.Group>\n    \n    \n                    <Form.Group controlId=\"password\">\n                        <Form.Label>Password</Form.Label>\n                        <Form.Control\n                        type=\"password\"\n                        placeholder=\"Enter your Password here\"\n                        value={password} \n                        onChange={(e)=>setPassword(e.target.value)}\n                        ></Form.Control>\n                    </Form.Group>\n                    <Button type=\"submit\" variant=\"primary\">Sign In</Button>\n    \n                </Form>\n                <Row className=\"py-3\">\n                    <Col>\n                        New Customer? <Link  to={'/register'}> Click here to Register</Link>\n                    </Col>\n                </Row>\n                </FormContainer>\n       \n            \n        </>\n       \n    )\n};\n\nexport default LoginScreen;","\nimport * as React from 'react';\nimport { Link } from \"react-router-dom\";\nimport { Row,Col,Form,Button } from \"react-bootstrap\";\nimport {useSelector, useDispatch} from 'react-redux'\nimport { register } from '../Actions/userActions';\nimport FormContainer from '../Components/FormContainer';\nimport Message from '../Components/Message';\nimport Loader from '../Components/Loader';\n\n\n\n\nfunction RegisterScreen({location,history}) {\n    const [name, setName] = React.useState('')\n    const [email, setEmail] = React.useState('')\n    const [password, setPassword] = React.useState('')\n    const [confirmPassword, setConfirmPassword] = React.useState('')\n    const [message, setMesssage] = React.useState('')\n\n\n    //const redirect = location.search ? location.search.split('m')[1] : '/createAddress'\n    \n    \n   \n    const userRegister = useSelector(state=> state.userRegister)\n    const {loading,error,userInfo} = userRegister\n    const dispatch = useDispatch()\n    \n    React.useEffect(()=>{\n        if(userInfo){\n            history.push('/')\n        }\n    }, [history,userInfo])\n    \n    const submitHandler = (e)=>{\n        e.preventDefault()\n        if(password !== confirmPassword){\n            setMesssage('password does not match')\n        }else{\n            dispatch(register(name,email,password))\n        }\n        history.push(\"/createAddress\")\n       console.log(\"register\")\n         \n    }\n\n\n    return (\n        <FormContainer>\n\n            <h1>Welcome, please enter vaild details in order to register your account.</h1>\n            {error && <Message variant=\"danger\">{error}</Message>}\n        {loading && <Loader/>}\n        \n        {message && <Message variant=\"danger\">{message}</Message> }\n           \n\n            \n             <Form onSubmit={submitHandler}>\n             <Form.Group controlId=\"name\">\n                    <Form.Label>UserName</Form.Label>\n                    <Form.Control\n                    required\n                    type=\"text\"\n                    placeholder=\"Enter your Username here\"\n                    value={name} \n                    onChange={(e)=>setName(e.target.value)}\n                    ></Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId=\"email\">\n                    <Form.Label>Email Address</Form.Label>\n                    <Form.Control\n                    required\n                    type=\"email\"\n                    placeholder=\"Enter your Email here\"\n                    value={email} \n                    onChange={(e)=>setEmail(e.target.value)}\n                    ></Form.Control>\n\n                    <Form.Group controlId=\"password\">\n                    <Form.Label>Password</Form.Label>\n                    <Form.Control\n                    required\n                    type=\"password\"\n                    placeholder=\"Enter your Password here\"\n                    value={password} \n                    onChange={(e)=>setPassword(e.target.value)}\n                    ></Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId=\"confirmPassword\">\n                    <Form.Label>Re-Enter Password</Form.Label>\n                    <Form.Control\n                    required\n                    type=\"password\"\n                    placeholder=\"Confirm Password\"\n                    value={confirmPassword} \n                    onChange={(e)=>setConfirmPassword(e.target.value)}\n                    ></Form.Control>\n                </Form.Group>\n                \n                <Button type=\"submit\" variant=\"primary\"  >Continue</Button>\n                </Form.Group>\n\n             </Form>\n             <Row className=\"py-3\">\n                <Col>\n                    Already have account? <Link  to=\"/login\">Click here to Login</Link>\n                </Col>\n            </Row>\n        </FormContainer>\n            \n        \n    );\n};\n\nexport default RegisterScreen;","// @flow strict\n\nimport  React,{useEffect} from 'react';\n//import {useDispatch,useSelector} from 'react-redux'\n\nimport {Row,Col,Pagination} from 'react-bootstrap'\nimport {LinkContainer} from 'react-router-bootstrap'\n\n//import { Link } from \"react-router-dom\";\n\n//import Loader from '../Components/Loader';\n//import Message  from '../Components/Message';\n\n\n\n\n\nfunction HomeScreen({history}) {\n\n    \n    return (\n    \n        \n       \n            \n                <>\n                    \n            <div style={{ \n                backgroundImage: `url(\"https://via.placeholder.com/500\")` \n             }}>\n                <Row>\n                    \n                    \n\n                  \n                </Row>\n              \n            </div>\n\n                </>\n        \n            \n     \n          \n\n\n            \n        \n    );\n};\n\nexport default HomeScreen;","\nimport * as React from 'react';\nimport { Link } from \"react-router-dom\";\nimport { Row,Col,Form,Button } from \"react-bootstrap\";\nimport {useSelector, useDispatch} from 'react-redux'\nimport { Address } from '../Actions/userActions';\nimport FormContainer from '../Components/FormContainer';\nimport Message from '../Components/Message';\nimport Loader from '../Components/Loader';\n\n\n\n\nfunction CreateAddrressScreen({location,history}) {\n    const [phone, setPhone] = React.useState('')\n    const [address, setAddress] = React.useState('')\n    const [country, setCountry] = React.useState('')\n    const [city, setCity] = React.useState('')\n    const [state, setState] = React.useState('')\n    const [postalCode, setPostalCode] = React.useState('')\n    const [accountNumber, setAccountNumber] = React.useState('')\n    const [message, setMesssage] = React.useState('')\n\n\n    //const redirect = location.search ? location.search.split('m')[1] : '/'\n    \n    \n   \n    const userLogin = useSelector(state=> state.userLogin)\n    const {loading,error,userInfo} = userLogin\n    const dispatch = useDispatch()\n    \n    //React.useEffect(()=>{\n    ////    if(!userInfo.username){\n       //     history.push('/login')\n     //   }\n    //}, [history,userInfo])\n    \n    const submitHandler = (e)=>{\n        e.preventDefault()\n       \n        dispatch(Address(phone,address,country,\n            city,state,postalCode,accountNumber))\n    \n        history.push(\"/profile\")\n       console.log(\"addressCreated\")\n         \n    }\n\n\n    return (\n        <FormContainer>\n\n            <h1>Please, fill the form below</h1>\n            {error && <Message variant=\"danger\">{error}</Message>}\n        {loading && <Loader/>}\n        \n        {message && <Message variant=\"danger\">{message}</Message> }\n           \n\n            \n             <Form onSubmit={submitHandler}>\n             <Form.Group controlId=\"tel\">\n                    <Form.Label>Phone Number</Form.Label>\n                    <Form.Control\n                    required\n                    type=\"number\"\n                    placeholder=\"Enter your phone number\"\n                    value={phone} \n                    onChange={(e)=>setPhone(e.target.value)}\n                    ></Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId=\"address\">\n                    <Form.Label>Address</Form.Label>\n                    <Form.Control\n                    required\n                    type=\"text\"\n                    placeholder=\"Enter your Address\"\n                    value={address} \n                    onChange={(e)=>setAddress(e.target.value)}\n                    ></Form.Control>\n\n                    <Form.Group controlId=\"country\">\n                    <Form.Label>Country</Form.Label>\n                    <Form.Control\n                    required\n                    type=\"text\"\n                    placeholder=\"\"\n                    value={country} \n                    onChange={(e)=>setCountry(e.target.value)}\n                    ></Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId=\"state\">\n                    <Form.Label>State</Form.Label>\n                    <Form.Control\n                    required\n                    type=\"text\"\n                    placeholder=\"\"\n                    value={state} \n                    onChange={(e)=>setState(e.target.value)}\n                    ></Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId=\"city\">\n                    <Form.Label>City</Form.Label>\n                    <Form.Control\n                    required\n                    type=\"text\"\n                    placeholder=\"\"\n                    value={city} \n                    onChange={(e)=>setCity(e.target.value)}\n                    ></Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId=\"postal\">\n                    <Form.Label>Postal Code</Form.Label>\n                    <Form.Control\n                    required\n                    type=\"text\"\n                    placeholder=\"Enter your postal code\"\n                    value={postalCode} \n                    onChange={(e)=>setPostalCode(e.target.value)}\n                    ></Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId=\"number\">\n                    <Form.Label>Account Number </Form.Label>\n                    <Form.Control\n                    required\n                    type=\"text\"\n                    placeholder=\"Input your account number\"\n                    value={accountNumber} \n                    onChange={(e)=>setAccountNumber(e.target.value)}\n                    ></Form.Control>\n                </Form.Group>\n                \n                <Button type=\"submit\" variant=\"primary\"  >SUBMIT FORM</Button>\n                </Form.Group>\n\n             </Form>\n             \n        </FormContainer>\n            \n        \n    );\n};\n\nexport default CreateAddrressScreen;","import React, { useState, useEffect } from 'react'\nimport { Form, Button, Row, Col, Table } from 'react-bootstrap'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Loader from '../Components/Loader'\nimport Message from '../Components/Message'\n\n\n//import { listMyOrders } from '../actions/orderActions\n//import {listMyOrders} from '../Actions/orderActions'\n\nfunction HistoryScreen({ history }) {\n\n \n    const [message, setMessage] = useState('')\n    const [email, setEmail] = useState(\"\")\n    const dispatch = useDispatch()\n\n  \n\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n    \n\n    \n\n   \n\n    \n\n    useEffect(() => {\n        if (!userInfo) {\n            history.push('/login')}\n      \n    }, [dispatch,history,userInfo,])\n/*\n    const submitHandler = ()=>{\n        e.preventDefault()\n        emailjs.sendForm(`email`,\n        apikey.TEMPLATE_ID, e.target,\n        apikey.USER_ID).then((result)=>{\n            alert(\"message sent, we will get back to u\")\n        },(error)=>{\n            alert(\"an error occured,please try again\")\n        })\n    }\n    */\n\n    return (\n        <Row>\n          \n            <Col md={9}>\n                <h2>Transaction History</h2>\n              \n                            <Table striped responsive className='table-sm'>\n                                <thead>\n                                    <tr>\n                                        <th>User</th>\n                                        <th>Amount</th>\n                                        <th>Charge Fees</th>\n                                        <th>Payment Type</th>\n                                        <th>Account Number</th>\n                                        <th>Account Name</th>\n                                        <th>Status</th>\n                                    \n                                    </tr>\n                                </thead>\n\n                                <tbody>\n                                    \n                                        <tr >\n                                            <td>{userInfo?.username}</td>\n                                            <td>$100,000</td>\n                                            <td>$490</td>\n                                            <td>Wire Transfer</td>\n                                            <td>HBUK4017264178610USD</td>\n                                            <td>Helium Accounting Service</td>\n                                            <td>Pending</td>\n                                        </tr>\n                                \n                                </tbody>\n                            </Table>\n                       \n            </Col>\n\n            <Col md={5}>\n            <h4 > </h4>\n             <Form onSubmit=\"\">\n                    <Form.Group controlId=\"email\">\n                        <Form.Label>COMPLAINT</Form.Label>\n                        <Form.Control\n                        type=\"text\"\n                        placeholder=\"File your complaint here\"\n                        value={email} \n                        onChange={(e)=>setEmail(e.target.value)}\n                        ></Form.Control>\n                    </Form.Group>\n    \n    \n                    \n                    <Button type=\"submit\" variant=\"primary\">Message</Button>\n    \n                </Form>\n\n            </Col>\n        </Row>\n    )\n}\n\nexport default HistoryScreen\n\n\n","import React from 'react';\nimport './App.css';\nimport {HashRouter as Router ,Route,Switch,} from 'react-router-dom'\nimport Header from './Components/Header';\nimport Footer from './Components/Footer';\nimport {Container} from 'react-bootstrap'\nimport LoginScreen from './Screens/LoginScreen';\nimport RegisterScreen from './Screens/RegisterScreen';\nimport Profilescreen from './Screens/ProfileScreen';\n//import QuizScreen from './Screens/QuizScreen';\nimport HomeScreen from './Screens/HomeScreen';\nimport CreateAddrressScreen from './Screens/CreateAddressScreen';\nimport HistoryScreen from './Screens/HistoryScreen'\n\nfunction App() {\n  return (\n    <Router>\n    <Header/>\n    <main className=\"py-3\">\n      <Container>\n        <Route path=\"/\" component={HomeScreen} exact/>\n       \n        <Route path=\"/login\" component={LoginScreen}/>\n        <Route path=\"/createAddress\" component={CreateAddrressScreen}/>\n        <Route path='/register' component={RegisterScreen}/>\n        <Route path='/profile' component={HistoryScreen}/>\n        \n\n\n      </Container>\n\n    </main>\n    <Footer/>\n  </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {createStore,combineReducers,applyMiddleware} from 'redux'\nimport thunk from 'redux-thunk'\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport { userLoginReducer,userRegisterReducer,userCreateAddressReducer } from './Reducers/userReducer';\n\n\nconst reducer = combineReducers({\n    userLogin : userLoginReducer,\n    userRegister: userRegisterReducer ,\n    userAddress: userCreateAddressReducer,\n \n\n})\nconst userInfoFromStorage = localStorage.getItem(\"userInfo\") ?\n    JSON.parse(localStorage.getItem(\"userInfo\")) : null\n\nconst initialState = {\n    userLogin: {userInfo: userInfoFromStorage}\n}\n\nconst middleware = [thunk]\n\n\nconst store = createStore(reducer, initialState,\n    composeWithDevTools(applyMiddleware(...middleware)))\n\n    export default store","import {\n    USER_LOGIN_REQUEST,\nUSER_LOGIN_SUCCESS,USER_LOGIN_FAIL,\nUSER_LOGOUT,\n\n\nUSER_REGISTER_SUCCESS,\nUSER_REGISTER_REQUEST,\nUSER_REGISTER_FAIL,\n\nUSER_CREATE_ADRESS_SUCCESS,\nUSER_CREATE_ADRESS_REQUEST,\nUSER_CREATE_ADRESS_FAIL,\n\n\nUSER_DETAILS_REQUEST,\nUSER_DETAILS_SUCCESS,\nUSER_DETAILS_FAIL,\nUSER_DETAILS_RESET,\n\n} from  '../Constants/userConstants'\n\nexport const userLoginReducer = (state = {}, action)=>{\n    switch (action.type) {\n        case USER_LOGIN_REQUEST:\n            return {loading: true}\n\n        case USER_LOGIN_SUCCESS:\n                return {loading:false, userInfo:action.payload}\n\n        case USER_LOGIN_FAIL:\n            return {loading: false, error: action.payload}\n            \n\n        case USER_LOGOUT:\n            return {}    \n            \n            \n    \n        default:\n            return state\n    }\n}\n\n\n\nexport const userRegisterReducer = (state = {}, action)=>{\n    switch (action.type) {\n        case USER_REGISTER_REQUEST:\n            return {loading: true}\n\n        case USER_REGISTER_SUCCESS:\n                return {loading:false, userInfo:action.payload}\n\n        case USER_REGISTER_FAIL:\n            return {loading: false, error: action.payload}\n\n        case USER_LOGOUT:\n            return {}    \n                \n            \n       \n            \n    \n        default:\n            return state\n    }\n}\n\nexport const userCreateAddressReducer = (state = {}, action)=>{\n    switch (action.type) {\n        case USER_CREATE_ADRESS_REQUEST:\n            return {loading: true}\n\n        case USER_CREATE_ADRESS_SUCCESS:\n                return {loading:false, userAddress:action.payload}\n\n        case USER_CREATE_ADRESS_FAIL:\n            return {loading: false, error: action.payload}\n\n        case USER_LOGOUT:\n            return {}      \n    \n        default:\n            return state\n    }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport store from './store'\nimport {Provider} from  'react-redux'\nimport './bootstrap.min.css'\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}